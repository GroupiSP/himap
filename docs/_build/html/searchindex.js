Search.setIndex({"alltitles": {"API Documentation": [[1, null]], "Authors": [[2, "authors"]], "Citing this repository:": [[2, "citing-this-repository"]], "Documentation overview:": [[2, null]], "Fundamentals of HMMs for Prognostics": [[0, null]], "HiMAP: Hidden Markov models for Advanced Prognostics": [[2, null]], "Installation:": [[2, "installation"]], "Key Features:": [[2, "key-features"]], "Quick Start Guide: Prognostics using C-MAPSS": [[3, null]], "Step 1: Create Your HSMM": [[3, "step-1-create-your-hsmm"]], "Step 1: Load the C-MAPSS": [[3, "step-1-load-the-c-mapss"]], "Step 2: Create Your HMM": [[3, "step-2-create-your-hmm"]], "Step 2: Optimize the Number of States and Train Your Model": [[3, "step-2-optimize-the-number-of-states-and-train-your-model"]], "Step 3: Optimize the Number of States and Train Your Model": [[3, "step-3-optimize-the-number-of-states-and-train-your-model"]], "Step 3: Perform Prognostics": [[3, "step-3-perform-prognostics"]], "Step 4: Perform Prognostics": [[3, "step-4-perform-prognostics"]], "Table of Contents": [[3, "table-of-contents"]], "Using a More Advanced Model: HSMM": [[3, "using-a-more-advanced-model-hsmm"]], "Using the classic Hidden Markov Model (HMM) for prognostics": [[3, "using-the-classic-hidden-markov-model-hmm-for-prognostics"]], "himap.ab module": [[1, "module-himap.ab"]], "himap.base module": [[1, "module-himap.base"]], "himap.main module": [[1, "module-himap.main"]], "himap.plot module": [[1, "module-himap.plot"]], "himap.utils module": [[1, "module-himap.utils"]]}, "docnames": ["fundamentals", "himap", "index", "quick_start"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["fundamentals.rst", "himap.rst", "index.rst", "quick_start.rst"], "indexentries": {"_backward() (in module himap.ab)": [[1, "himap.ab._backward", false]], "_check() (himap.base.gaussianhsmm method)": [[1, "himap.base.GaussianHSMM._check", false]], "_check() (himap.base.hsmm method)": [[1, "himap.base.HSMM._check", false]], "_core_backward() (himap.base.hsmm method)": [[1, "himap.base.HSMM._core_backward", false]], "_core_forward() (himap.base.hsmm method)": [[1, "himap.base.HSMM._core_forward", false]], "_core_smoothed() (himap.base.hsmm method)": [[1, "himap.base.HSMM._core_smoothed", false]], "_core_u_only() (himap.base.hsmm method)": [[1, "himap.base.HSMM._core_u_only", false]], "_core_viterbi() (himap.base.hsmm method)": [[1, "himap.base.HSMM._core_viterbi", false]], "_curr_u() (in module himap.ab)": [[1, "himap.ab._curr_u", false]], "_dur_check() (himap.base.gaussianhsmm method)": [[1, "himap.base.GaussianHSMM._dur_check", false]], "_dur_check() (himap.base.hsmm method)": [[1, "himap.base.HSMM._dur_check", false]], "_dur_init() (himap.base.gaussianhsmm method)": [[1, "himap.base.GaussianHSMM._dur_init", false]], "_dur_init() (himap.base.hsmm method)": [[1, "himap.base.HSMM._dur_init", false]], "_dur_mstep() (himap.base.gaussianhsmm method)": [[1, "himap.base.GaussianHSMM._dur_mstep", false]], "_dur_mstep() (himap.base.hsmm method)": [[1, "himap.base.HSMM._dur_mstep", false]], "_dur_probmat() (himap.base.gaussianhsmm method)": [[1, "himap.base.GaussianHSMM._dur_probmat", false]], "_dur_probmat() (himap.base.hsmm method)": [[1, "himap.base.HSMM._dur_probmat", false]], "_emission_logl() (himap.base.gaussianhsmm method)": [[1, "himap.base.GaussianHSMM._emission_logl", false]], "_emission_logl() (himap.base.hsmm method)": [[1, "himap.base.HSMM._emission_logl", false]], "_emission_mstep() (himap.base.gaussianhsmm method)": [[1, "himap.base.GaussianHSMM._emission_mstep", false]], "_emission_mstep() (himap.base.hsmm method)": [[1, "himap.base.HSMM._emission_mstep", false]], "_emission_pre_mstep() (himap.base.hsmm method)": [[1, "himap.base.HSMM._emission_pre_mstep", false]], "_forward() (in module himap.ab)": [[1, "himap.ab._forward", false]], "_init() (himap.base.gaussianhsmm method)": [[1, "himap.base.GaussianHSMM._init", false]], "_init() (himap.base.hmm method)": [[1, "himap.base.HMM._init", false]], "_init() (himap.base.hsmm method)": [[1, "himap.base.HSMM._init", false]], "_init_mc() (himap.base.gaussianhsmm method)": [[1, "himap.base.GaussianHSMM._init_mc", false]], "_init_mc() (himap.base.hmm method)": [[1, "himap.base.HMM._init_mc", false]], "_init_mc() (himap.base.hsmm method)": [[1, "himap.base.HSMM._init_mc", false]], "_state_sample() (himap.base.gaussianhsmm method)": [[1, "himap.base.GaussianHSMM._state_sample", false]], "_state_sample() (himap.base.hsmm method)": [[1, "himap.base.HSMM._state_sample", false]], "_u_only() (in module himap.ab)": [[1, "himap.ab._u_only", false]], "baumwelch_method() (in module himap.utils)": [[1, "himap.utils.baumwelch_method", false]], "bic() (himap.base.hsmm method)": [[1, "himap.base.HSMM.bic", false]], "bs_calculation() (in module himap.utils)": [[1, "himap.utils.bs_calculation", false]], "calculate_area_weighted_by_time() (in module himap.utils)": [[1, "himap.utils.calculate_area_weighted_by_time", false]], "calculate_cdf() (in module himap.utils)": [[1, "himap.utils.calculate_cdf", false]], "calculate_expected_value() (in module himap.utils)": [[1, "himap.utils.calculate_expected_value", false]], "create_data_hsmm() (in module himap.utils)": [[1, "himap.utils.create_data_hsmm", false]], "create_folders() (in module himap.utils)": [[1, "himap.utils.create_folders", false]], "decode() (himap.base.hmm method)": [[1, "himap.base.HMM.decode", false]], "default() (himap.utils.numpyarrayencoder method)": [[1, "himap.utils.NumpyArrayEncoder.default", false]], "estimate() (himap.base.hmm method)": [[1, "himap.base.HMM.estimate", false]], "evaluate_test_set() (in module himap.utils)": [[1, "himap.utils.evaluate_test_set", false]], "fit() (himap.base.hmm method)": [[1, "himap.base.HMM.fit", false]], "fit() (himap.base.hsmm method)": [[1, "himap.base.HSMM.fit", false]], "fit_bic() (himap.base.hmm method)": [[1, "himap.base.HMM.fit_bic", false]], "fit_bic() (himap.base.hsmm method)": [[1, "himap.base.HSMM.fit_bic", false]], "fix_input_data() (in module himap.utils)": [[1, "himap.utils.fix_input_data", false]], "fs_calculation() (in module himap.utils)": [[1, "himap.utils.fs_calculation", false]], "gaussianhsmm (class in himap.base)": [[1, "himap.base.GaussianHSMM", false]], "get_coverage() (in module himap.utils)": [[1, "himap.utils.get_coverage", false]], "get_rmse() (in module himap.utils)": [[1, "himap.utils.get_rmse", false]], "get_single_history_states() (in module himap.utils)": [[1, "himap.utils.get_single_history_states", false]], "get_viterbi() (in module himap.utils)": [[1, "himap.utils.get_viterbi", false]], "get_wsu() (in module himap.utils)": [[1, "himap.utils.get_wsu", false]], "himap.ab": [[1, "module-himap.ab", false]], "himap.base": [[1, "module-himap.base", false]], "himap.main": [[1, "module-himap.main", false]], "himap.plot": [[1, "module-himap.plot", false]], "himap.utils": [[1, "module-himap.utils", false]], "himap_main() (in module himap.main)": [[1, "himap.main.himap_main", false]], "hmm (class in himap.base)": [[1, "himap.base.HMM", false]], "hsmm (class in himap.base)": [[1, "himap.base.HSMM", false]], "load_data_cmapss() (in module himap.utils)": [[1, "himap.utils.load_data_cmapss", false]], "load_model() (himap.base.hmm method)": [[1, "himap.base.HMM.load_model", false]], "load_model() (himap.base.hsmm method)": [[1, "himap.base.HSMM.load_model", false]], "log_mask_zero() (in module himap.utils)": [[1, "himap.utils.log_mask_zero", false]], "mc_dataset() (himap.base.hmm method)": [[1, "himap.base.HMM.mc_dataset", false]], "mc_dataset() (himap.base.hsmm method)": [[1, "himap.base.HSMM.mc_dataset", false]], "module": [[1, "module-himap.ab", false], [1, "module-himap.base", false], [1, "module-himap.main", false], [1, "module-himap.plot", false], [1, "module-himap.utils", false]], "numpyarrayencoder (class in himap.utils)": [[1, "himap.utils.NumpyArrayEncoder", false]], "plot_multiple_observ() (in module himap.plot)": [[1, "himap.plot.plot_multiple_observ", false]], "plot_ruls() (in module himap.plot)": [[1, "himap.plot.plot_ruls", false]], "predict() (himap.base.hmm method)": [[1, "himap.base.HMM.predict", false]], "predict() (himap.base.hsmm method)": [[1, "himap.base.HSMM.predict", false]], "prognostics() (himap.base.hmm method)": [[1, "himap.base.HMM.prognostics", false]], "prognostics() (himap.base.hsmm method)": [[1, "himap.base.HSMM.prognostics", false]], "rul() (himap.base.hmm method)": [[1, "himap.base.HMM.RUL", false]], "rul() (himap.base.hsmm method)": [[1, "himap.base.HSMM.RUL", false]], "run_process() (in module himap.main)": [[1, "himap.main.run_process", false]], "sample() (himap.base.hmm method)": [[1, "himap.base.HMM.sample", false]], "sample() (himap.base.hsmm method)": [[1, "himap.base.HSMM.sample", false]], "save_model() (himap.base.hmm method)": [[1, "himap.base.HMM.save_model", false]], "save_model() (himap.base.hsmm method)": [[1, "himap.base.HSMM.save_model", false]], "score() (himap.base.hsmm method)": [[1, "himap.base.HSMM.score", false]], "str2bool() (in module himap.utils)": [[1, "himap.utils.str2bool", false]]}, "objects": {"himap": [[1, 0, 0, "-", "ab"], [1, 0, 0, "-", "base"], [1, 0, 0, "-", "main"], [1, 0, 0, "-", "plot"], [1, 0, 0, "-", "utils"]], "himap.ab": [[1, 1, 1, "", "_backward"], [1, 1, 1, "", "_curr_u"], [1, 1, 1, "", "_forward"], [1, 1, 1, "", "_u_only"]], "himap.base": [[1, 2, 1, "", "GaussianHSMM"], [1, 2, 1, "", "HMM"], [1, 2, 1, "", "HSMM"]], "himap.base.GaussianHSMM": [[1, 3, 1, "", "_check"], [1, 3, 1, "", "_dur_check"], [1, 3, 1, "", "_dur_init"], [1, 3, 1, "", "_dur_mstep"], [1, 3, 1, "", "_dur_probmat"], [1, 3, 1, "", "_emission_logl"], [1, 3, 1, "", "_emission_mstep"], [1, 3, 1, "", "_init"], [1, 3, 1, "", "_init_mc"], [1, 3, 1, "", "_state_sample"]], "himap.base.HMM": [[1, 3, 1, "", "RUL"], [1, 3, 1, "", "_init"], [1, 3, 1, "", "_init_mc"], [1, 3, 1, "", "decode"], [1, 3, 1, "", "estimate"], [1, 3, 1, "", "fit"], [1, 3, 1, "", "fit_bic"], [1, 3, 1, "", "load_model"], [1, 3, 1, "", "mc_dataset"], [1, 3, 1, "", "predict"], [1, 3, 1, "", "prognostics"], [1, 3, 1, "", "sample"], [1, 3, 1, "", "save_model"]], "himap.base.HSMM": [[1, 3, 1, "", "RUL"], [1, 3, 1, "", "_check"], [1, 3, 1, "", "_core_backward"], [1, 3, 1, "", "_core_forward"], [1, 3, 1, "", "_core_smoothed"], [1, 3, 1, "", "_core_u_only"], [1, 3, 1, "", "_core_viterbi"], [1, 3, 1, "", "_dur_check"], [1, 3, 1, "", "_dur_init"], [1, 3, 1, "", "_dur_mstep"], [1, 3, 1, "", "_dur_probmat"], [1, 3, 1, "", "_emission_logl"], [1, 3, 1, "", "_emission_mstep"], [1, 3, 1, "", "_emission_pre_mstep"], [1, 3, 1, "", "_init"], [1, 3, 1, "", "_init_mc"], [1, 3, 1, "", "_state_sample"], [1, 3, 1, "", "bic"], [1, 3, 1, "", "fit"], [1, 3, 1, "", "fit_bic"], [1, 3, 1, "", "load_model"], [1, 3, 1, "", "mc_dataset"], [1, 3, 1, "", "predict"], [1, 3, 1, "", "prognostics"], [1, 3, 1, "", "sample"], [1, 3, 1, "", "save_model"], [1, 3, 1, "", "score"]], "himap.main": [[1, 1, 1, "", "himap_main"], [1, 1, 1, "", "run_process"]], "himap.plot": [[1, 1, 1, "", "plot_multiple_observ"], [1, 1, 1, "", "plot_ruls"]], "himap.utils": [[1, 2, 1, "", "NumpyArrayEncoder"], [1, 1, 1, "", "baumwelch_method"], [1, 1, 1, "", "bs_calculation"], [1, 1, 1, "", "calculate_area_weighted_by_time"], [1, 1, 1, "", "calculate_cdf"], [1, 1, 1, "", "calculate_expected_value"], [1, 1, 1, "", "create_data_hsmm"], [1, 1, 1, "", "create_folders"], [1, 1, 1, "", "evaluate_test_set"], [1, 1, 1, "", "fix_input_data"], [1, 1, 1, "", "fs_calculation"], [1, 1, 1, "", "get_coverage"], [1, 1, 1, "", "get_rmse"], [1, 1, 1, "", "get_single_history_states"], [1, 1, 1, "", "get_viterbi"], [1, 1, 1, "", "get_wsu"], [1, 1, 1, "", "load_data_cmapss"], [1, 1, 1, "", "log_mask_zero"], [1, 1, 1, "", "str2bool"]], "himap.utils.NumpyArrayEncoder": [[1, 3, 1, "", "default"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [0, 1], "0": 1, "01": 1, "1": 1, "10": 1, "100": 1, "10x": 1, "11": 3, "1d": 1, "1e": 1, "2": 1, "20": [1, 3], "200": 3, "21": [1, 3], "2d": 1, "30": 1, "3d": 1, "5": [1, 3], "7": 3, "8": 3, "80": 3, "95": 1, "A": [0, 1], "By": [0, 3], "For": [1, 3], "If": [1, 3], "In": 0, "It": [0, 1, 2], "The": [0, 1, 3], "To": [0, 1, 3], "With": 3, "_backward": 1, "_check": 1, "_core_backward": 1, "_core_forward": 1, "_core_smooth": 1, "_core_u_onli": 1, "_core_viterbi": 1, "_curr_u": 1, "_dur_check": 1, "_dur_init": 1, "_dur_mstep": 1, "_dur_probmat": 1, "_emission_logl": 1, "_emission_mstep": 1, "_emission_pre_mstep": 1, "_forward": 1, "_init": 1, "_init_mc": 1, "_state_sampl": 1, "_u_onli": 1, "abl": 0, "about": 0, "accuraci": 3, "across": 1, "addition": 3, "adjust": [1, 3], "aerospac": 2, "after": 1, "algorithm": 1, "all": 1, "allow_nan": 1, "along": 3, "alpha": 1, "alreadi": [1, 3], "also": 3, "alwai": 0, "among": 1, "an": [0, 1, 3], "analyz": 0, "ani": 1, "anoth": 0, "api": 2, "append": 1, "appli": [0, 1], "applic": [1, 2], "ar": [1, 3], "arang": 3, "arbitrari": 1, "area": 1, "arg": 1, "argpars": 1, "argument": 1, "arrai": 1, "ascii": 1, "assumpt": 0, "attempt": 1, "attribut": 1, "auto": 1, "auxiliari": 1, "averag": 1, "b": 1, "backward": 1, "balanc": 3, "base": 3, "basi": 1, "baum": 1, "baumwelch_method": 1, "bayesian": [1, 3], "begin": 0, "behavior": 1, "below": [0, 3], "best": [1, 3], "beta": 1, "betastar": 1, "better": [0, 3], "between": 1, "bic": [1, 3], "bic_fit": 1, "blue": 0, "bool": 1, "bound": 1, "bs_calcul": 1, "c": [1, 2], "calc_emi": 1, "calc_tr": 1, "calcul": [0, 1], "calculate_area_weighted_by_tim": 1, "calculate_cdf": 1, "calculate_expected_valu": 1, "call": 1, "camu": 2, "can": [0, 1, 3], "candid": 1, "cannot": 0, "carlo": [1, 2], "case": 1, "categori": 1, "caus": 1, "cdf": 1, "censor": 1, "certain": 0, "chang": [1, 3], "charact": 1, "check": 1, "check_circular": 1, "child": 1, "circular": 1, "citat": 2, "class": 1, "cluster": 1, "cmapss": 1, "code": 3, "combin": 1, "combined_df": 1, "come": 3, "compact": 1, "compar": [1, 3], "complex": [0, 2, 3], "compliant": 1, "comput": [1, 2], "condit": 0, "confid": [1, 3], "confidence_level": 1, "configur": 1, "consid": 1, "consist": [0, 1, 3], "constrain": 1, "constructor": 1, "contain": [1, 3], "context": 0, "converg": 1, "convolut": 1, "core": 2, "correspond": [0, 1, 3], "could": 1, "count": 1, "covari": 1, "coverag": [1, 3], "covmat": 1, "creat": 1, "create_data_hsmm": 1, "create_fold": 1, "criterion": [1, 3], "csv": [1, 3], "ctr_sampl": 1, "cumul": 1, "curr_u": 1, "current": 1, "currentst": 1, "curv": 1, "custom": 1, "cython": 1, "d": 1, "dai": 1, "damag": 0, "data": [0, 1, 2, 3], "datafram": 1, "dataset": [1, 2, 3], "decod": [1, 2], "def": 1, "default": 1, "defin": 3, "degrad": [0, 1, 2, 3], "delft": 2, "densiti": [0, 2], "depend": 3, "determin": [1, 3], "develop": 2, "df_result": 1, "dict": 1, "dictionari": [1, 3], "differ": [0, 1], "directli": 3, "directori": 1, "discret": [0, 1, 3], "distribut": [0, 1, 3], "doe": 1, "doesn": 0, "don": 3, "done": 0, "due": 3, "dummi": 2, "dur": 1, "durat": [0, 1, 3], "dure": 1, "e": [0, 1], "each": [0, 1, 3], "earlier": 0, "easier": 3, "eleftherogl": 2, "element": 1, "elimin": 1, "els": 1, "em": 1, "emi": 1, "emiss": [0, 1], "emission_var": 1, "emit": 0, "enabl": 1, "enable_visu": 1, "encod": 1, "end_traj": 1, "enforc": 1, "engin": [0, 2], "ensur": [1, 3], "ensure_ascii": 1, "equal": 1, "equat": 1, "error": 1, "escap": 1, "estim": [0, 1], "estimatedst": 1, "eta": 1, "evalu": 1, "evaluate_test_set": 1, "evenli": 1, "evolv": 0, "exampl": [1, 3], "except": 1, "exist": 1, "expect": 1, "expected_valu": 1, "explicit": 1, "extens": 1, "f": 1, "f_valu": [1, 3], "factor": 1, "faculti": 2, "failur": [0, 1, 3], "fall": 3, "fals": 1, "fd001": 3, "few": [0, 3], "fig_path": 1, "figur": [1, 3], "file": [1, 3], "final": [0, 1], "find": 1, "first": 0, "fit": [1, 3], "fit_bic": [1, 3], "fix": [0, 1], "fix_input_data": 1, "flag": 1, "flexibl": 0, "float": 1, "folder": [1, 3], "follow": [0, 1, 3], "format": 1, "forward": 1, "framework": 2, "from": [0, 1, 3], "fs_calcul": 1, "function": [0, 1, 2, 3], "fundament": 2, "g": [0, 1], "gamma": 1, "gaussian": 1, "gaussianhsmm": [1, 3], "gener": [1, 2, 3], "genrat": 1, "get": 1, "get_coverag": 1, "get_metr": [1, 3], "get_rms": 1, "get_single_history_st": 1, "get_viterbi": 1, "get_wsu": 1, "give": 0, "given": 1, "good": 0, "great": 1, "group": 2, "guarante": 1, "guid": 2, "ha": 1, "handl": 1, "happen": 0, "have": [0, 3], "heal": 0, "here": 0, "hidden": [0, 1], "higher": 3, "himap_main": 1, "histor": 0, "histori": [1, 3], "history_st": 1, "hmm": [1, 2], "hmm_c": 3, "hmm_model": 3, "how": 3, "howev": [0, 3], "hsmm": [0, 1, 2], "hsmm_c": 3, "i": [0, 1, 2, 3], "id": 1, "ideal": 3, "identifi": 1, "imag": 0, "implement": [1, 2], "improv": 3, "includ": [1, 2, 3], "incom": 1, "indent": 1, "index": 1, "indic": [1, 3], "infer": 2, "infin": 1, "infinit": 1, "inform": [1, 3], "initi": [0, 1], "inplac": 1, "input": [1, 3], "insert": 1, "instanc": 1, "instead": [1, 3], "int": 1, "integ": 1, "intellig": 2, "intermedi": 1, "interv": [0, 1, 3], "is_zero_index": 1, "isp": 2, "item": 1, "item_separ": 1, "iter": [1, 3], "its": [0, 1], "j": 1, "javascript": 1, "joint": 1, "json": 1, "jsonencod": 1, "k": 1, "kei": [0, 1], "key_separ": 1, "kmeans_init": 1, "kmeans_n_init": 1, "know": 3, "kontogianni": 2, "label": 2, "last": [1, 3], "last_stat": 1, "lb_rul": 1, "learn": [0, 3], "led": 0, "left": 1, "left_censor": 1, "left_to_right": 1, "length": 1, "less": 1, "let": 1, "level": [0, 1], "life": [0, 1, 2, 3], "like": [0, 1, 3], "likelihood": [0, 1], "list": [1, 3], "ll": 3, "load": 1, "load_cmapss": 3, "load_data_cmapss": 1, "load_model": 1, "log": 1, "log_durprob": 1, "log_mask_zero": 1, "log_obsprob": 1, "log_startprob": 1, "log_transmat": 1, "logarithm": 1, "logdur": 1, "logfram": 1, "logp": 1, "logpseq": 1, "lower": [1, 3], "lower_bound_dict": 1, "lower_valu": 1, "m": [1, 2], "made": 1, "main": 0, "make": 0, "mani": 3, "manner": 1, "mapss": [1, 2], "mariana": 2, "markov": [0, 1], "mask": 1, "mass": 1, "matric": 1, "matrix": 1, "max": 1, "max_sampl": 1, "maxim": 1, "maximum": [1, 3], "mc": 1, "mc_dataset": 1, "mc_sampl": 1, "mc_traj": 1, "mean": 1, "mean_rul": 1, "mean_rul_dict": 1, "measur": [0, 3], "member": 1, "messag": 1, "method": [1, 2, 3], "metric": [1, 3], "might": [0, 3], "mode": 3, "model": [0, 1], "model_nam": 1, "modifi": 1, "mont": [1, 2], "more": 0, "most": [0, 1], "move": 0, "multipl": [0, 1], "must": 1, "n": 2, "n_durat": [1, 3], "n_iter": [1, 3], "n_obs_symbol": [1, 3], "n_sampl": 1, "n_state": [1, 3], "name": 1, "namespac": 1, "nan": 1, "ndarrai": 1, "necessari": 1, "need": [1, 3], "neg": 1, "new": 0, "new_dur": 1, "newlin": 1, "next": 3, "nick": 2, "nl": 2, "non": 1, "none": 1, "normal": 1, "note": 1, "np": [1, 3], "num": 1, "num2plot": 1, "num_histori": 1, "number": 1, "numpi": 1, "numpyarrayencod": 1, "o": 1, "ob": 1, "obj": 1, "object": 1, "obs_state_len": [1, 3], "observ": [0, 1, 3], "onc": [0, 3], "one": [0, 1, 3], "onli": [0, 1], "option": 1, "orang": 0, "organ": 1, "other": [0, 1], "otherwis": 1, "output": 1, "over": [0, 3], "packag": 2, "pair": 1, "param": 1, "paramet": [0, 1], "parametr": 1, "pass": 1, "path": 1, "pattern": 3, "pd": 1, "pdf": [0, 1, 2, 3], "per": [0, 1], "percentil": 1, "perform": 1, "pi": 1, "pip": 2, "place": 1, "plot": 3, "plot_multiple_observ": 1, "plot_rul": [1, 3], "plu": 3, "pmf": 1, "pmf_valu": 1, "png": 1, "possibl": [0, 1], "posterior": 1, "precomput": 1, "predefin": 3, "predict": [0, 1, 2, 3], "predictict": 1, "prefer": 3, "prepar": 1, "pretti": 1, "prevent": 1, "previous": 1, "principl": 0, "print": 1, "probabilist": 2, "probabl": [0, 1, 2, 3], "process": [0, 1, 2, 3], "produc": [0, 1], "prognost": 1, "progress": 1, "properti": 1, "provid": [1, 2, 3], "pseq": 1, "pstate": 1, "python": [2, 3], "quick": 2, "rais": 1, "random": 1, "random_st": 1, "randomst": 1, "rang": 3, "re": 1, "read": [0, 3], "real": 0, "recurs": 1, "recursionerror": 1, "reduc": 3, "refer": [1, 3], "regress": 1, "relax": 0, "relev": 1, "remain": [0, 1, 2, 3], "repeat": 3, "repres": [0, 1, 3], "represent": 1, "reproduc": 1, "requir": [1, 2, 3], "respons": 1, "result": [0, 1, 3], "return": [1, 3], "return_all_scor": 1, "return_matric": 1, "return_model": 1, "return_scor": 1, "revert": 0, "right": 1, "right_censor": 1, "rmse": [1, 3], "root": 1, "row": 1, "rul": [0, 1, 2, 3], "rul_low": 1, "rul_lower_bound": 1, "rul_matrix": 1, "rul_mean": 1, "rul_upp": 1, "rul_upper_bound": 1, "run": [1, 3], "run_process": 1, "salina": 2, "salinascamu": 2, "same": [0, 1], "sampl": [1, 2], "satisfi": 1, "save": [1, 3], "save_it": 1, "save_model": 1, "scale": 1, "score": 1, "score_per_it": 1, "see": [0, 3], "seed": 1, "select": 1, "self": 1, "semi": [1, 2, 3], "sensibl": 1, "sensor": [0, 3], "separ": 1, "seqs_test": [1, 3], "seqs_train": [1, 3], "sequenc": [0, 1, 2], "sequence_length": 1, "serial": 1, "serializ": 1, "set": [1, 3], "shape": 1, "should": 1, "show": 3, "shown": 0, "similar": 3, "similarli": 3, "simpli": 1, "simplifi": 0, "sinc": 3, "singl": 1, "skip": 1, "skipkei": 1, "smooth": 1, "so": 1, "some": 0, "sort": 1, "sort_kei": 1, "specif": [0, 1], "specifi": [1, 3], "spread": [1, 3], "squar": 1, "start": [0, 1, 2], "state": [0, 1, 2], "state_logl": 1, "state_sequ": 1, "states_al": 1, "statesm": 1, "step": [0, 1], "stochast": [0, 2], "stop": 1, "store": 1, "str": 1, "str2bool": 1, "structur": 1, "sub": 3, "subclass": 1, "subdirectori": 1, "suit": 0, "sum": 1, "support": 1, "sustain": 2, "symbol": [1, 3], "system": [0, 1, 2], "t": [0, 1, 3], "tailor": 2, "take": 1, "test": [1, 3], "test_fd001_disc_20_mod": 3, "than": 1, "thano": 2, "thei": [1, 3], "them": 1, "thi": [0, 1, 3], "threshold": 1, "through": 2, "time": [0, 1, 3], "timestep": 1, "tmat": 1, "tol": 1, "toler": 1, "too": 3, "topologi": 1, "total": 1, "tr": 1, "train": [0, 1, 2], "train_fd001_disc_20_mod": 3, "traj": 1, "traj_": 1, "trajectori": [1, 3], "transform": 1, "transit": [0, 1, 3], "trend": 3, "true": [1, 3], "true_rul_dict": 1, "try": 1, "tu": 2, "tudelft": 2, "tupl": 1, "two": 3, "type": 1, "typeerror": 1, "u": 1, "ub_rul": 1, "uncertainti": [1, 3], "under": 1, "underflow": 1, "understand": 3, "unlik": [0, 3], "unobserv": 0, "unsupervis": 2, "updat": 1, "upper": 1, "upper_bound_dict": 1, "us": [0, 1, 2], "v": 1, "valid": 1, "valu": [0, 1, 3], "valueerror": 1, "vari": 3, "variabl": 1, "verifi": 1, "version": 1, "via": 1, "visit": 1, "visual": [1, 3], "viterbi": [1, 2], "viterbi_st": 1, "wa": 2, "walk": 1, "we": [0, 3], "weight": 1, "welch": 1, "well": 3, "when": 0, "where": [0, 1], "whether": 1, "which": [0, 1, 3], "while": [0, 3], "whitespac": 1, "wider": 3, "within": [1, 3], "without": [1, 2], "work": [1, 3], "world": 0, "would": 1, "wsu": [1, 3], "x": 1, "x_valu": 1, "xi": 1, "y": 1, "y_valu": 1, "yet": 1, "you": [0, 1, 3], "zero": 1, "\u03b9nitial": 1}, "titles": ["Fundamentals of HMMs for Prognostics", "API Documentation", "HiMAP: Hidden Markov models for Advanced Prognostics", "Quick Start Guide: Prognostics using C-MAPSS"], "titleterms": {"1": 3, "2": 3, "3": 3, "4": 3, "ab": 1, "advanc": [2, 3], "api": 1, "author": 2, "base": 1, "c": 3, "cite": 2, "classic": 3, "content": 3, "creat": 3, "document": [1, 2], "featur": 2, "fundament": 0, "guid": 3, "hidden": [2, 3], "himap": [1, 2], "hmm": [0, 3], "hsmm": 3, "instal": 2, "kei": 2, "load": 3, "main": 1, "mapss": 3, "markov": [2, 3], "model": [2, 3], "modul": 1, "more": 3, "number": 3, "optim": 3, "overview": 2, "perform": 3, "plot": 1, "prognost": [0, 2, 3], "quick": 3, "repositori": 2, "start": 3, "state": 3, "step": 3, "tabl": 3, "thi": 2, "train": 3, "us": 3, "util": 1, "your": 3}})